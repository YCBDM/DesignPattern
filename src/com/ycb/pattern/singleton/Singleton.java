package com.ycb.pattern.singleton;

/**
 * @author Interesting
 * @version 1.0
 * @date 2020/6/11 16:00
 */
/**
 * 单例模式的设计思想
 * 在上面我们说到现在解决问题的关键就是保证在应用中只有一个对象就行了，那么怎么保证只有一个对象呢？
 * 其实只需要三步就可以保证对象的唯一性
 * (1)不允许其他程序用new对象。
 *     因为new就是开辟新的空间，在这里更改数据只是更改的所创建的对象的数据，如果可以new的话，每一次new都产生一个对象，这样肯定保证不了对象的唯一性。
 * (2)在该类中创建对象
 *    因为不允许其他程序new对象，所以这里的对象需要在本类中new出来
 * (3)对外提供一个可以让其他程序获取该对象的方法
 *    因为对象是在本类中创建的，所以需要提供一个方法让其它的类获取这个对象。
 * 那么这三步怎么用代码实现呢？将上述三步转换成代码描述是这样的
 * (1)私有化该类的构造函数
 * (2)通过new在本类中创建一个本类对象
 * (3)定义一个公有的方法，将在该类中所创建的对象返回
 *
 * */

public class Singleton {

}
